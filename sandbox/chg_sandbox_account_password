#!/bin/bash
#
# Update the password of a sandbox account.

#set -o nounset
#set -o errexit
set -o pipefail

DEFAULT_SANDBOX_SCRIPT_CONF="${HOME}/sandbox/scripts/sandbox_script.conf.default"

# Output utilities
err() {
  echo -e "$@" >&2
}

failed() {
  printf "\033[31m" >&1  # set to red font for stdout
  printf "$@" >&2  # output to stderr
  printf "\033[0m\n" >&1  # reset color for stdout
}

# Inlcude script configuration
readonly SCRIPT_CONF="${SANDBOX_SCRIPT_CONF:-${DEFAULT_SANDBOX_SCRIPT_CONF}}"
if [[ -n "${SCRIPT_CONF}" ]]; then
  source "${SCRIPT_CONF}"
  if [[ "$?" -ne 0 ]]; then
    err "Failed to load script configuration: ${SCRIPT_CONF}"
    exit 5
  fi
else
  err "Script configuration is not specified"
  exit 4
fi

# Validate command parameters
if [[ "$#" -lt 2 ]]; then
  err "Usage: $(basename "$0") <sandbox_id> <password>"
  exit 1
fi

# Set variables
readonly ID="$1"
readonly PASSWORD="$2"

if [[ -n "${SANDBOX_USERNAME_INIT}" ]]; then
  USERNAME="${SANDBOX_USERNAME_INIT}-${ID}"
else
  USERNAME="${DEFAULT_USERNAME_INIT}-${ID}"
fi

# Validate the existence of account
if ! id -u "${USERNAME}" > /dev/null 2>&1; then
  failed "account '${USERNAME}' does not exist"
  exit 2
fi

# Update account password
echo -e "${PASSWORD}\n${PASSWORD}" | sudo passwd "${USERNAME}" > /dev/null 2>&1

RET="$?"
if [[ "${RET}" -eq 0 ]]; then
  echo "password updated successfully"
else
  failed "failed to update password$"
fi

# End of script
exit "${RET}"
