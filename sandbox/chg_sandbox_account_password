#!/bin/bash
#
# Update the password of a sandbox account.

#set -o nounset
#set -o errexit
set -o pipefail

DEFAULT_SANDBOX_SCRIPT_CONF="${HOME}/sandbox/scripts/sandbox_script.conf.default"

# Output utilities
err() {
  echo -e "$@" >&2  # output to stderr
}

failed() {
  printf "\033[31m" >&1  # set to red font for stdout
  printf "$@" >&2  # output to stderr
  printf "\033[0m\n" >&1  # reset color for stdout
}

check_err() {
  local -r RET="$?"
  if [[ "${RET}" -ne 0 ]]; then
    err "$@"
    exit "${RET}"
  fi
}

check_failed() {
  local -r RET="$?"
  if [[ "${RET}" -ne 0 ]]; then
    failed "$@"
    exit "${RET}"
  fi
}

# Inlcude script configuration
readonly SCRIPT_CONF="${SANDBOX_SCRIPT_CONF:-${DEFAULT_SANDBOX_SCRIPT_CONF}}"
[[ -n "${SCRIPT_CONF}" ]]
check_err "Script configuration is not specified"

source "${SCRIPT_CONF}"
check_err "Failed to load script configuration: ${SCRIPT_CONF}"

readonly SCRIPT_NAME="$(basename "$0")"

# Command parameters
readonly ID="$1"
readonly PASSWORD="$2"
[[ -n "${ID}" ]] && [[ -n "${PASSWORD}" ]]
check_err "Usage: ${SCRIPT_NAME} <sandbox_id> <password>"

# Set variables
if [[ -n "${SANDBOX_USERNAME_INIT}" ]]; then
  USERNAME="${SANDBOX_USERNAME_INIT}-${ID}"
else
  USERNAME="${DEFAULT_USERNAME_INIT}-${ID}"
fi

# Validate the existence of account
if ! id -u "${USERNAME}" > /dev/null 2>&1; then
  failed "account '${USERNAME}' does not exist"
  exit 2
fi

# Update account password
echo -e "${PASSWORD}\n${PASSWORD}" | sudo passwd "${USERNAME}" > /dev/null 2>&1

RET="$?"
if [[ "${RET}" -eq 0 ]]; then
  echo "password updated successfully"
else
  failed "failed to update password$"
fi

# End of script
exit "${RET}"
