#!/usr/bin/env bash
#
# Genearte a UStore release.

# set -o nounset
# set -o errexit
set -o pipefail

# Include libraries
readonly SCRIPT_HOME="$(cd "$(dirname -- "$0")"; pwd -P)"
source "${FAIRY_HOME:-${SCRIPT_HOME}/../..}/_common_lib/output_utils.sh"

# Set variables
readonly BUILD_DIR="${USTORE_BUILD_DIR:-"build"}"
readonly SOURCE_DIR="${USTORE_SOURCE_DIR:-"."}"
readonly LUCENE_DIR="${USTORE_LUCENE_DIR:-"lucene"}"
readonly CMAKE_ARGS="${USTORE_CMAKE_ARGS-"-DUSE_ROCKS_STORE=ON"}"

# Validate paths
[[ -d "${SOURCE_DIR}" ]] ||
check_err "Invalid path '${SOURCE_DIR}'"
export USTORE_ROOT="$(cd "${SOURCE_DIR}"; pwd -P)"

[[ -d "${LUCENE_DIR}" ]] ||
check_err "Invalid path: '${LUCENE_DIR}'"
readonly USTORE_LUCENE="$(cd "${LUCENE_DIR}"; pwd -P)"

readonly WORK_DIR="$(pwd -P)"

# Build UStore
cd "${WORK_DIR}"
rm -f "${BUILD_DIR}"
check_err "Failed to delete folder '${BUILD_DIR}'"
mkdir -p "${BUILD_DIR}"

cd "${BUILD_DIR}"
cmake ${CMAKE_ARGS} "${USTORE_ROOT}"
make -j "$(cat /proc/cpuinfo | grep "cpu cores" | uniq | awk '{print $NF}')"

export USTORE_HOME="$(cd "${WORK_DIR}/${BUILD_DIR}"; pwd -P)"

# Build Lucene
cd "${USTORE_LUCENE}"
mvn clean package
check_err "Failed to build Lucene"
export LUCENE_TARGET="${USTORE_LUCENE}/target"

# Generate release
cd "${WORK_DIR}"
sh "${USTORE_ROOT}/pack/release.sh"
check_err "Failed to generate UStore release"

rm -rf ustore_release
rm -rf "${BUILD_DIR}"

# End of script
info "UStore release is generated successfully"
exit 0
