#!/usr/bin/env bash

# Do not allow use of undefined vars. Use ${VAR:-} to use an undefined VAR
set -o nounset
# Exit on error. Append "|| true" if you expect an error.
set -o errexit
# Exit on error inside any functions or subshells.
set -o errtrace
# Catch the error in case mysqldump fails (but gzip succeeds) in `mysqldump |gzip`
set -o pipefail
# Turn on traces, useful while debugging but commented out by default
# set -o xtrace

IFS=$'\t\n'    # Split on newlines and tabs (but not on spaces)

[[ -n "${__SCRIPT_DIR+x}" ]] || readonly __SCRIPT_DIR="$(cd "$(dirname -- "${BASH_SOURCE[0]}")" && pwd -P)"
[[ -n "${__SCRIPT_NAME+x}" ]] || readonly __SCRIPT_NAME="$(basename -- "$0")"

# Include libraries
[[ -n "${FAIRY_COMMONS_HOME+x}" ]] || readonly FAIRY_COMMONS_HOME="${__SCRIPT_DIR}/.."
# shellcheck disable=SC1090
source "${FAIRY_COMMONS_HOME}/lib/output_utils.sh"
# shellcheck disable=SC1090
source "${FAIRY_COMMONS_HOME}/lib/system.sh"

# Global variables
[[ -n "${__START_TIME+x}" ]] || readonly __START_TIME="$(timer)"

# The main function
main() {
  rm -rf $HOME/.ivy2
  rm -rf $HOME/.m2
  rm -rf /Users/$USER/Library/Caches/Coursier/v1/https
  
  # Do cleaning up and bookkeeping in 'finish()', if necessary
  finish
}

finish() {
  info "Completed in $(timer "${__START_TIME}")"
}

print_usage() {
cat <<EndOfMsg
Usage: ${__SCRIPT_NAME} [OPTION]...

Options:
  -h, -?, --help    display this help and exit

EndOfMsg
}

# Execution (SHOULDN'T EDIT AFTER THIS LINE!)
main "$@"
[[ "$0" != "${BASH_SOURCE[0]}" ]] || exit 0
