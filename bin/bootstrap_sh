#!/usr/bin/env bash

set -o nounset
set -o errexit
set -o errtrace
set -o pipefail

# Global variables
[[ -n "${__SCRIPT_DIR+x}" ]] ||
readonly __SCRIPT_DIR="$(cd "$(dirname -- "${BASH_SOURCE[0]}")" && pwd -P)"

[[ -n "${__SCRIPT_NAME+x}" ]] ||
readonly __SCRIPT_NAME="$(basename -- "$0")"

# The main function
main() {
  check_args "$@"
  readonly TEMPLATE="${TEMPLATE-"bash_bootstrap.sh"}"
  [[ -n "${FILENAME}" ]] || error_on_filename_missing
  [[ ! -f "${FILENAME}" ]] || error_on_file_exists
  
  cat "${__SCRIPT_DIR}/../_template/${TEMPLATE}" > "${FILENAME}"
  chmod +x "${FILENAME}"
}

# Helper functions
check_args() {
  [[ "$#" -ge 1 ]] || error_on_filename_missing
  
  for arg in "$@"; do
    case "${arg}" in
      # Print help message
      '--help'|'-h'|'-?' )
        print_usage
        exit 0
      ;;
      '--fairy' )
        TEMPLATE="fairy_bash_bootstrap.sh"
      ;;
      # Option: template for suing build_latex.sh
      '--latex'|'--tex' )
        TEMPLATE="use_build_latex.sh"
      ;;
      # Unknown options
      '-'* )
        err "Unknown command argument(s) '${arg}' (see '--help' for usage)"
        exit 126
      ;;
      # Default: assign variable
      * )
        assign_filename "${arg}"
      ;;
    esac
  done
}

print_usage() {
cat <<EndOfMsg
Usage: ${__SCRIPT_NAME} [OPTION]... FILE

Options:
  -h, -?, --help    display this help and exit
  --tex, --latex    template for using build_latex.sh

EndOfMsg
}

assign_filename () {
  [[ -z "${FILENAME:-}" ]] || error_on_multi_filename
  readonly FILENAME="$1"
}

error_on_filename_missing() {
  printf "ERROR: Missing target filename!\n\n"
  print_usage
  exit 126
}

error_on_multi_filename() {
  printf "ERROR: Too many filenames! Only one should be specified.\n\n"
  print_usage
  exit 3
}

error_on_file_exists() {
  printf "ERROR: File '%s' already exists! (Not overwriting)\n\n" "${FILENAME}"
  exit 4
}

# Execution (SHOULDN'T EDIT AFTER THIS LINE!)
main "$@"
[[ "$0" != "${BASH_SOURCE[0]}" ]] || exit 0
